#!/usr/bin/env python3
#
#   Copyright (C) 2019  Vishnu V. Krishnan : vishnugb@gmail.com
#
#   This program is free software: you can redistribute it and/or modify
#   it under the terms of the GNU General Public License as published by
#   the Free Software Foundation, either version 3 of the License, or
#   (at your option) any later version.
#
#   This program is distributed in the hope that it will be useful,
#   but WITHOUT ANY WARRANTY; without even the implied warranty of
#   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#   GNU General Public License for more details.
#
#   You should have received a copy of the GNU General Public License
#   along with this program.  If not, see <https://www.gnu.org/licenses/>.
#
"""
Largest product in a series

    The four adjacent digits in the 1000-digit number that have the greatest
    product are 9 × 9 × 8 × 9 = 5832.

        73167176531330624919225119674426574742355349194934
        96983520312774506326239578318016984801869478851843
        85861560789112949495459501737958331952853208805511
        12540698747158523863050715693290963295227443043557
        66896648950445244523161731856403098711121722383113
        62229893423380308135336276614282806444486645238749
        30358907296290491560440772390713810515859307960866
        70172427121883998797908792274921901699720888093776
        65727333001053367881220235421809751254540594752243
        52584907711670556013604839586446706324415722155397
        53697817977846174064955149290862569321978468622482
        83972241375657056057490261407972968652414535100474
        82166370484403199890008895243450658541227588666881
        16427171479924442928230863465674813919123162824586
        17866458359124566529476545682848912883142607690042
        24219022671055626321111109370544217506941658960408
        07198403850962455444362981230987879927244284909188
        84580156166097919133875499200524063689912560717606
        05886116467109405077541002256983155200055935729725
        71636269561882670428252483600823257530420752963450

    Find the thirteen adjacent digits in the 1000-digit number that have the
    greatest product. What is the value of this product?
"""

from time import process_time

START = process_time()

# The number of adjacent digits, the product of which, we want to maximise
N = 13

NUMBER = ('73167176531330624919225119674426574742355349194934'
          '96983520312774506326239578318016984801869478851843'
          '85861560789112949495459501737958331952853208805511'
          '12540698747158523863050715693290963295227443043557'
          '66896648950445244523161731856403098711121722383113'
          '62229893423380308135336276614282806444486645238749'
          '30358907296290491560440772390713810515859307960866'
          '70172427121883998797908792274921901699720888093776'
          '65727333001053367881220235421809751254540594752243'
          '52584907711670556013604839586446706324415722155397'
          '53697817977846174064955149290862569321978468622482'
          '83972241375657056057490261407972968652414535100474'
          '82166370484403199890008895243450658541227588666881'
          '16427171479924442928230863465674813919123162824586'
          '17866458359124566529476545682848912883142607690042'
          '24219022671055626321111109370544217506941658960408'
          '07198403850962455444362981230987879927244284909188'
          '84580156166097919133875499200524063689912560717606'
          '05886116467109405077541002256983155200055935729725'
          '71636269561882670428252483600823257530420752963450')

SIZE = len(NUMBER)

LOCATION = 0
PRODUCT = 0

for i in range(SIZE-N):
    PROD = 1
    for letter in list(NUMBER[i:i+N]):
        PROD *= int(letter)
    if PROD > PRODUCT:
        PRODUCT = PROD
        LOCATION = i

FINISH = process_time()

END = ""
for i in range(N-1):
    END += NUMBER[LOCATION+i] + " × "
END += NUMBER[LOCATION+N-1] + f" = {PRODUCT}"

print(END)
print(f"{FINISH-START:.5f} seconds")
